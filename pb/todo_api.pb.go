// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: azinchenko/todo/v1/todo_api.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task *Task `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *AddTaskRequest) Reset() {
	*x = AddTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_azinchenko_todo_v1_todo_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTaskRequest) ProtoMessage() {}

func (x *AddTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_azinchenko_todo_v1_todo_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTaskRequest.ProtoReflect.Descriptor instead.
func (*AddTaskRequest) Descriptor() ([]byte, []int) {
	return file_azinchenko_todo_v1_todo_api_proto_rawDescGZIP(), []int{0}
}

func (x *AddTaskRequest) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type ArchiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ArchiveRequest) Reset() {
	*x = ArchiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_azinchenko_todo_v1_todo_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveRequest) ProtoMessage() {}

func (x *ArchiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_azinchenko_todo_v1_todo_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveRequest.ProtoReflect.Descriptor instead.
func (*ArchiveRequest) Descriptor() ([]byte, []int) {
	return file_azinchenko_todo_v1_todo_api_proto_rawDescGZIP(), []int{1}
}

func (x *ArchiveRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MarkDoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MarkDoneRequest) Reset() {
	*x = MarkDoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_azinchenko_todo_v1_todo_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkDoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkDoneRequest) ProtoMessage() {}

func (x *MarkDoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_azinchenko_todo_v1_todo_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkDoneRequest.ProtoReflect.Descriptor instead.
func (*MarkDoneRequest) Descriptor() ([]byte, []int) {
	return file_azinchenko_todo_v1_todo_api_proto_rawDescGZIP(), []int{2}
}

func (x *MarkDoneRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task *Task `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *TaskResponse) Reset() {
	*x = TaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_azinchenko_todo_v1_todo_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResponse) ProtoMessage() {}

func (x *TaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_azinchenko_todo_v1_todo_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResponse.ProtoReflect.Descriptor instead.
func (*TaskResponse) Descriptor() ([]byte, []int) {
	return file_azinchenko_todo_v1_todo_api_proto_rawDescGZIP(), []int{3}
}

func (x *TaskResponse) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

var File_azinchenko_todo_v1_todo_api_proto protoreflect.FileDescriptor

var file_azinchenko_todo_v1_todo_api_proto_rawDesc = []byte{
	0x0a, 0x21, 0x61, 0x7a, 0x69, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f, 0x2f, 0x74, 0x6f, 0x64,
	0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x64, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x61, 0x7a, 0x69, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x1a, 0x1d, 0x61, 0x7a, 0x69, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f,
	0x2f, 0x74, 0x6f, 0x64, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x3b, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x7a, 0x69, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b,
	0x22, 0x20, 0x0a, 0x0e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x21, 0x0a, 0x0f, 0x4d, 0x61, 0x72, 0x6b, 0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x7a, 0x69, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b,
	0x32, 0xee, 0x01, 0x0a, 0x07, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x70, 0x69, 0x12, 0x47, 0x0a, 0x03,
	0x41, 0x64, 0x64, 0x12, 0x1f, 0x2e, 0x61, 0x7a, 0x69, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x7a, 0x69, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x6b,
	0x6f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x07, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x12, 0x1f, 0x2e, 0x61, 0x7a, 0x69, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x7a, 0x69, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4d, 0x0a, 0x08, 0x4d, 0x61, 0x72, 0x6b, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x20,
	0x2e, 0x61, 0x7a, 0x69, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x61, 0x7a, 0x69, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x14, 0x5a, 0x12, 0x61, 0x7a, 0x69, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f, 0x2f,
	0x61, 0x75, 0x74, 0x68, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_azinchenko_todo_v1_todo_api_proto_rawDescOnce sync.Once
	file_azinchenko_todo_v1_todo_api_proto_rawDescData = file_azinchenko_todo_v1_todo_api_proto_rawDesc
)

func file_azinchenko_todo_v1_todo_api_proto_rawDescGZIP() []byte {
	file_azinchenko_todo_v1_todo_api_proto_rawDescOnce.Do(func() {
		file_azinchenko_todo_v1_todo_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_azinchenko_todo_v1_todo_api_proto_rawDescData)
	})
	return file_azinchenko_todo_v1_todo_api_proto_rawDescData
}

var file_azinchenko_todo_v1_todo_api_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_azinchenko_todo_v1_todo_api_proto_goTypes = []interface{}{
	(*AddTaskRequest)(nil),  // 0: azinchenko.auth.AddTaskRequest
	(*ArchiveRequest)(nil),  // 1: azinchenko.auth.ArchiveRequest
	(*MarkDoneRequest)(nil), // 2: azinchenko.auth.MarkDoneRequest
	(*TaskResponse)(nil),    // 3: azinchenko.auth.TaskResponse
	(*Task)(nil),            // 4: azinchenko.auth.Task
}
var file_azinchenko_todo_v1_todo_api_proto_depIdxs = []int32{
	4, // 0: azinchenko.auth.AddTaskRequest.task:type_name -> azinchenko.auth.Task
	4, // 1: azinchenko.auth.TaskResponse.task:type_name -> azinchenko.auth.Task
	0, // 2: azinchenko.auth.TaskApi.Add:input_type -> azinchenko.auth.AddTaskRequest
	1, // 3: azinchenko.auth.TaskApi.Archive:input_type -> azinchenko.auth.ArchiveRequest
	2, // 4: azinchenko.auth.TaskApi.MarkDone:input_type -> azinchenko.auth.MarkDoneRequest
	3, // 5: azinchenko.auth.TaskApi.Add:output_type -> azinchenko.auth.TaskResponse
	3, // 6: azinchenko.auth.TaskApi.Archive:output_type -> azinchenko.auth.TaskResponse
	3, // 7: azinchenko.auth.TaskApi.MarkDone:output_type -> azinchenko.auth.TaskResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_azinchenko_todo_v1_todo_api_proto_init() }
func file_azinchenko_todo_v1_todo_api_proto_init() {
	if File_azinchenko_todo_v1_todo_api_proto != nil {
		return
	}
	file_azinchenko_todo_v1_task_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_azinchenko_todo_v1_todo_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_azinchenko_todo_v1_todo_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_azinchenko_todo_v1_todo_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkDoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_azinchenko_todo_v1_todo_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_azinchenko_todo_v1_todo_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_azinchenko_todo_v1_todo_api_proto_goTypes,
		DependencyIndexes: file_azinchenko_todo_v1_todo_api_proto_depIdxs,
		MessageInfos:      file_azinchenko_todo_v1_todo_api_proto_msgTypes,
	}.Build()
	File_azinchenko_todo_v1_todo_api_proto = out.File
	file_azinchenko_todo_v1_todo_api_proto_rawDesc = nil
	file_azinchenko_todo_v1_todo_api_proto_goTypes = nil
	file_azinchenko_todo_v1_todo_api_proto_depIdxs = nil
}
